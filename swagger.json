{
  "openapi": "3.0.1",
  "info": {
    "title": "Coderlust",
    "description": "This is a sample apis for football website. All the apis work with Oauth 2.0 except singup and signin. Bearere token is must for all the other APIs.",
    "contact": {
      "email": "prachit.patil@codeburst.io"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://salty-citadel-56178.herokuapp.com/api/v1"
    }
  ],
  "paths": {
    "/signup": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "Get the user information, validate and store it in database",
        "requestBody": {
          "description": "The user to create.",
          "content": {
            "application:json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User created succesfully",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedUser"
                }
              }
            }
          },
          "400": {
            "description": "User creation failed",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "email already exists"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "user"
      }
    },
    "/signin": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Login user",
        "description": "Login user into the website",
        "requestBody": {
          "description": "Login information.",
          "content": {
            "application:json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User created succesfully",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProp"
                }
              }
            }
          },
          "400": {
            "description": "User creation failed",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "User with email does not exist... Please signup"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "user"
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user information",
        "description": "Show user profile to the user",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the user to get"
          }
        ],
        "responses": {
          "200": {
            "description": "User information",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              }
            }
          },
          "400": {
            "description": "User not found",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "No user found"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update user information",
        "description": "Update user information",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the user to get"
          }
        ],
        "responses": {
          "200": {
            "description": "User information",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              }
            }
          },
          "400": {
            "description": "User not found",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "No user found"
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logout user",
        "description": "Signout the user from website",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the user to get"
          }
        ],
        "responses": {
          "200": {
            "description": "User information",
            "content": {
              "application:json": {
                "schema": {
                  "example": {
                    "message": "Logout success"
                  }
                }
              }
            }
          },
          "400": {
            "description": "User not found",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "No user found"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": [
          "name",
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "rashy07"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "example": "Kodasndsak*92821"
          }
        }
      },
      "LoginUser": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "example": "Kodasndsak*92821"
          }
        }
      },
      "CreatedUser": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "role": {
                "type": "number"
              },
              "_id": {
                "type": "string",
                "example": "5e6d4169de71e629c4d72417"
              },
              "name": {
                "type": "string",
                "example": "rashy07"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "createdAt": {
                "type": "string",
                "format": "date"
              },
              "updatedAt": {
                "type": "string",
                "format": "date"
              }
            }
          }
        }
      },
      "UserInfo": {
        "type": "object",
        "properties": {
          "role": {
            "type": "number"
          },
          "_id": {
            "type": "string",
            "example": "5e6d4169de71e629c4d72417"
          },
          "name": {
            "type": "string",
            "example": "rashy07"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "UserProp": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZTZkNDE2OWRlNzFlNjI5YzRkNzI0MTciLCJpYXQiOjE1ODQyMTg0ODJ9.047XgfwyFZLoePjQWfNmFb9_T94H2j79x7CY8MizDTE"
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "5e6d4169de71e629c4d72417"
              },
              "name": {
                "type": "string",
                "example": "rashy07"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "role": {
                "type": "integer"
              }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "Standard400ErrorResponse": {
        "description": "An unexpected error occured.",
        "content": {
          "application:josn": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}