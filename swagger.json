{
  "openapi": "3.0.1",
  "info": {
    "title": "Coderlust",
    "description": "This is a sample apis for football website. All the apis work with Oauth 2.0 except singup and signin. Bearere token is must for all the other APIs.",
    "contact": {
      "email": "prachit.patil@codeburst.io"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://salty-citadel-56178.herokuapp.com/api/v1"
    }
  ],
  "paths": {
    "/signup": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "Get the user information, validate and store it in database",
        "requestBody": {
          "description": "The user to create.",
          "content": {
            "application:json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User created succesfully",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedUser"
                }
              }
            }
          },
          "400": {
            "description": "User creation failed",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "email already exists"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "user"
      }
    },
    "/signin": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Login user",
        "description": "Login user into the website",
        "requestBody": {
          "description": "Login information.",
          "content": {
            "application:json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User created succesfully",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProp"
                }
              }
            }
          },
          "400": {
            "description": "User creation failed",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "User with email does not exist... Please signup"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "user"
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user information",
        "description": "Show user profile to the user",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the user to get"
          }
        ],
        "responses": {
          "200": {
            "description": "User information",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              }
            }
          },
          "400": {
            "description": "User not found",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "No user found"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update user information",
        "description": "Update user information",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the user to get"
          }
        ],
        "responses": {
          "200": {
            "description": "User information",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              }
            }
          },
          "400": {
            "description": "User not found",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "No user found"
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logout user",
        "description": "Signout the user from website",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the user to get"
          }
        ],
        "responses": {
          "200": {
            "description": "User information",
            "content": {
              "application:json": {
                "schema": {
                  "example": {
                    "message": "Logout success"
                  }
                }
              }
            }
          },
          "400": {
            "description": "User not found",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "No user found"
                }
              }
            }
          }
        }
      }
    },
    "/addplayer/{userId}": {
      "post": {
        "tags": [
          "Player"
        ],
        "summary": "Add Player",
        "description": "Store player information in database",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the signed-in user"
          }
        ],
        "requestBody": {
          "description": "The player to create.",
          "content": {
            "form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddPlayer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Player created succesfully",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedPlayer"
                }
              }
            }
          },
          "400": {
            "description": "Player creation failed",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "All fields are required"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "player"
      }
    },
    "/updateplayer/{playerId}/{userId}": {
      "put": {
        "tags": [
          "Player"
        ],
        "summary": "Update Player",
        "description": "Update player information in database",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the signed-in user"
          },
          {
            "in": "path",
            "name": "playerId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the player to get"
          }
        ],
        "requestBody": {
          "description": "The player to create.",
          "content": {
            "form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddPlayer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Player created succesfully",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedPlayer"
                }
              }
            }
          },
          "400": {
            "description": "Player creation failed",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "All fields are required"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "player"
      }
    },
    "/updateplayerstatus/{playerId}/{userId}": {
      "put": {
        "tags": [
          "Player"
        ],
        "summary": "Update Player Status",
        "description": "Update player status to enable/disable",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the signed-in user"
          },
          {
            "in": "path",
            "name": "playerId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the player to get"
          }
        ],
        "responses": {
          "200": {
            "description": "Player status updated succesfully",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedPlayer"
                }
              }
            }
          },
          "400": {
            "description": "Player status update failed",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "No player found"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "player"
      }
    },
    "/getplayer/{playerId}/{userId}": {
      "get": {
        "tags": [
          "Player"
        ],
        "summary": "Get Player information",
        "description": "Get player profile",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the signed-in user"
          },
          {
            "in": "path",
            "name": "playerId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the player to get"
          }
        ],
        "responses": {
          "200": {
            "description": "Player information",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerInfo"
                }
              }
            }
          },
          "400": {
            "description": "Player not found",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "No player found"
                }
              }
            }
          }
        }
      }
    },
    "/getplayers/{userId}": {
      "get": {
        "tags": [
          "Player"
        ],
        "summary": "Get Players",
        "description": "Get all players",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the signed-in user"
          }
        ],
        "responses": {
          "200": {
            "description": "Players information",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Players"
                }
              }
            }
          },
          "400": {
            "description": "Players not found",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "No player found"
                }
              }
            }
          }
        }
      }
    },
    "/addcoach/{userId}": {
      "post": {
        "tags": [
          "Coach"
        ],
        "summary": "Add Coach",
        "description": "Store Coach information in database",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the signed-in user"
          }
        ],
        "requestBody": {
          "description": "The coach to create.",
          "content": {
            "form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddCoach"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Coach created succesfully",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedCoach"
                }
              }
            }
          },
          "400": {
            "description": "Coach creation failed",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "All fields are required"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "coach"
      }
    },
    "/updatecoach/{playerId}/{userId}": {
      "put": {
        "tags": [
          "Coach"
        ],
        "summary": "Update Coach",
        "description": "Update coach information in database",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the signed-in user"
          },
          {
            "in": "path",
            "name": "playerId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the player to get"
          }
        ],
        "requestBody": {
          "description": "The player to create.",
          "content": {
            "form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddCoach"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Coach created succesfully",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedCoach"
                }
              }
            }
          },
          "400": {
            "description": "Coach creation failed",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "All fields are required"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "coach"
      }
    },
    "/updatecoachstatus/{playerId}/{userId}": {
      "put": {
        "tags": [
          "Coach"
        ],
        "summary": "Update Coach Status",
        "description": "Update coach status to enable/disable",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the signed-in user"
          },
          {
            "in": "path",
            "name": "playerId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the player to get"
          }
        ],
        "responses": {
          "200": {
            "description": "Coach status updated succesfully",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedCoach"
                }
              }
            }
          },
          "400": {
            "description": "Coach status update failed",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "No coach found"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "coach"
      }
    },
    "/getcoach/{coachId}/{userId}": {
      "get": {
        "tags": [
          "Coach"
        ],
        "summary": "Get Coach information",
        "description": "Get coach profile",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the signed-in user"
          },
          {
            "in": "path",
            "name": "coachId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the coach to get"
          }
        ],
        "responses": {
          "200": {
            "description": "Coach information",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/CoachInfo"
                }
              }
            }
          },
          "400": {
            "description": "Coach not found",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "No coach found"
                }
              }
            }
          }
        }
      }
    },
    "/getcoaches/{userId}": {
      "get": {
        "tags": [
          "Coach"
        ],
        "summary": "Get Coaches",
        "description": "Get all coaches",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the signed-in user"
          }
        ],
        "responses": {
          "200": {
            "description": "Coach information",
            "content": {
              "application:json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CoachInfo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Coach not found",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "No coach found"
                }
              }
            }
          }
        }
      }
    },
    "/addteam/{userId}": {
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "Add Team",
        "description": "Add team in the database",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the signed-in user"
          }
        ],
        "requestBody": {
          "description": "The team to create.",
          "content": {
            "application:json": {
              "schema": {
                "$ref": "#/components/schemas/AddTeam"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Team information",
            "content": {
              "application:json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreatedTeam"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Team creation failed",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Team creation failed"
                }
              }
            }
          }
        }
      }
    },
    "/getteam/{teamId}/{userId}": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get Team",
        "description": "Get team from the database",
        "parameters": [
          {
            "in": "path",
            "name": "teamId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Team ID"
          },
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the signed-in user"
          }
        ],
        "responses": {
          "200": {
            "description": "Team information",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Teaminfo"
                }
              }
            }
          },
          "400": {
            "description": "Team not found",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Team not found"
                }
              }
            }
          }
        }
      }
    },
    "/getteams/{userId}": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get Teams",
        "description": "Get teams from the database",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the signed-in user"
          }
        ],
        "responses": {
          "200": {
            "description": "Team information",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Teams"
                }
              }
            }
          },
          "400": {
            "description": "Team creation failed",
            "content": {
              "application:json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Team creation failed"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": [
          "username",
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "rashy07"
          },
          "firstname": {
            "type": "string",
            "example": "Marcus"
          },
          "lastname": {
            "type": "string",
            "example": "Rashford"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "example": "Kodasndsak*92821"
          }
        }
      },
      "LoginUser": {
        "required": [
          "name",
          "password"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "rashy07"
          },
          "password": {
            "type": "string",
            "example": "Kodasndsak*92821"
          }
        }
      },
      "CreatedUser": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "role": {
                "type": "number"
              },
              "_id": {
                "type": "string",
                "example": "5e6d4169de71e629c4d72417"
              },
              "username": {
                "type": "string",
                "example": "rashy07"
              },
              "firstname": {
                "type": "string",
                "example": "Marcus"
              },
              "lastname": {
                "type": "string",
                "example": "Rashford"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "createdAt": {
                "type": "string",
                "format": "date"
              },
              "updatedAt": {
                "type": "string",
                "format": "date"
              }
            }
          }
        }
      },
      "UserInfo": {
        "type": "object",
        "properties": {
          "role": {
            "type": "number"
          },
          "_id": {
            "type": "string",
            "example": "5e6d4169de71e629c4d72417"
          },
          "username": {
            "type": "string",
            "example": "rashy07"
          },
          "firstname": {
            "type": "string",
            "example": "Marcus"
          },
          "lastname": {
            "type": "string",
            "example": "Rashford"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "UserProp": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZTZkNDE2OWRlNzFlNjI5YzRkNzI0MTciLCJpYXQiOjE1ODQyMTg0ODJ9.047XgfwyFZLoePjQWfNmFb9_T94H2j79x7CY8MizDTE"
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "5e6d4169de71e629c4d72417"
              },
              "username": {
                "type": "string",
                "example": "rashy07"
              },
              "firstname": {
                "type": "string",
                "example": "Marcus"
              },
              "lastname": {
                "type": "string",
                "example": "Rashford"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "role": {
                "type": "integer"
              }
            }
          }
        }
      },
      "AddPlayer": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "example": "Prachit"
          },
          "lastname": {
            "type": "string",
            "example": "Patil"
          },
          "age": {
            "type": "number",
            "example": 24
          },
          "role": {
            "type": "string",
            "example": "player"
          },
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "team": {
            "type": "string",
            "example": "Mumbai"
          },
          "position": {
            "type": "string",
            "example": "LW"
          },
          "user": {
            "type": "string",
            "example": "5e6d4169de34918236d72417"
          },
          "photo": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "CreatedPlayer": {
        "type": "object",
        "properties": {
          "photo": {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "Buffer"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "example": []
                    }
                  },
                  "contentType": {
                    "type": "string",
                    "example": "image/jpeg"
                  }
                }
              }
            }
          },
          "_id": {
            "type": "string",
            "example": "5e6d4169de71e629c4d72417"
          },
          "firstname": {
            "type": "string",
            "example": "Prachit"
          },
          "lastname": {
            "type": "string",
            "example": "Patil"
          },
          "age": {
            "type": "number",
            "example": 24
          },
          "role": {
            "type": "string",
            "example": "player"
          },
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "team": {
            "type": "string",
            "example": "Mumbai"
          },
          "position": {
            "type": "string",
            "example": "LW"
          },
          "user": {
            "type": "string",
            "example": "5e6d4169de34918236d72417"
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "PlayerInfo": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5e6d4169de71e629c4d72417"
          },
          "firstname": {
            "type": "string",
            "example": "marcus"
          },
          "lastname": {
            "type": "string",
            "example": "rashford"
          },
          "age": {
            "type": "number",
            "example": 21
          },
          "role": {
            "type": "string",
            "example": "player"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "team": {
            "type": "string",
            "example": "England"
          },
          "position": {
            "type": "string",
            "example": "ST"
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "Players": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "number",
            "example": 2
          },
          "page": {
            "type": "number",
            "example": 1
          },
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "5e6d4169de71e629c4d72417"
                },
                "firstname": {
                  "type": "string",
                  "example": "marcus"
                },
                "lastname": {
                  "type": "string",
                  "example": "rashford"
                },
                "age": {
                  "type": "number",
                  "example": 21
                },
                "role": {
                  "type": "string",
                  "example": "player"
                },
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "isActive": {
                  "type": "boolean",
                  "example": true
                },
                "team": {
                  "type": "string",
                  "example": "England"
                },
                "position": {
                  "type": "string",
                  "example": "ST"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date"
                }
              }
            }
          }
        }
      },
      "AddCoach": {
        "type": "object",
        "required": [
          "firstname",
          "lastname",
          "age",
          "role",
          "email",
          "team"
        ],
        "properties": {
          "firstname": {
            "type": "string",
            "example": "Prachit"
          },
          "lastname": {
            "type": "string",
            "example": "Patil"
          },
          "age": {
            "type": "number",
            "example": 24
          },
          "role": {
            "type": "string",
            "example": "coach"
          },
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "philosophy": {
            "type": "string"
          },
          "team": {
            "type": "string",
            "example": "Mumbai"
          },
          "photo": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "CreatedCoach": {
        "type": "object",
        "properties": {
          "photo": {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "Buffer"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "example": []
                    }
                  },
                  "contentType": {
                    "type": "string",
                    "example": "image/jpeg"
                  }
                }
              }
            }
          },
          "_id": {
            "type": "string",
            "example": "5e6d4169de71e629c4d72417"
          },
          "firstname": {
            "type": "string",
            "example": "Prachit"
          },
          "lastname": {
            "type": "string",
            "example": "Patil"
          },
          "age": {
            "type": "number",
            "example": 24
          },
          "role": {
            "type": "string",
            "example": "player"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "team": {
            "type": "string",
            "example": "Mumbai"
          }
        }
      },
      "CoachInfo": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5e6d4169de71e629c4d72417"
          },
          "firstname": {
            "type": "string",
            "example": "marcus"
          },
          "lastname": {
            "type": "string",
            "example": "rashford"
          },
          "age": {
            "type": "number",
            "example": 21
          },
          "role": {
            "type": "string",
            "example": "coach"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "team": {
            "type": "string",
            "example": "England"
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "AddTeam": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Pune"
          },
          "ageGroup": {
            "type": "string",
            "example": "16-24"
          },
          "staff": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Akshay Sgvekar"
                },
                "designation": {
                  "type": "string",
                  "example": "Manager"
                },
                "contact": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          }
        }
      },
      "CreatedTeam": {
        "type": "object",
        "properties": {
          "team": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "5e6d4169de71e629c4d72417"
              },
              "name": {
                "type": "string",
                "example": "Pune"
              },
              "ageGroup": {
                "type": "string",
                "example": "16-25"
              },
              "user": {
                "type": "string",
                "example": "5e80abc8dacad100170561b5"
              },
              "staff": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "5e6d4169de71e629c4d72417"
                    },
                    "name": {
                      "type": "string",
                      "example": "Akshay Sgvekar"
                    },
                    "designation": {
                      "type": "string",
                      "example": "Manager"
                    },
                    "contact": {
                      "type": "string",
                      "format": "email"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date"
                    }
                  }
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date"
              },
              "updatedAt": {
                "type": "string",
                "format": "date"
              }
            }
          }
        }
      },
      "Teaminfo": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5e6d4169de71e629c4d72417"
          },
          "name": {
            "type": "string",
            "example": "Pune"
          },
          "ageGroup": {
            "type": "string",
            "example": "16-25"
          },
          "user": {
            "type": "string",
            "example": "5e80abc8dacad100170561b5"
          },
          "staff": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "5e6d4169de71e629c4d72417"
                },
                "name": {
                  "type": "string",
                  "example": "Akshay Sgvekar"
                },
                "designation": {
                  "type": "string",
                  "example": "Manager"
                },
                "contact": {
                  "type": "string",
                  "format": "email"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date"
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "Teams": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "number",
            "example": 2
          },
          "page": {
            "type": "number",
            "example": 1
          },
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "5e6d4169de71e629c4d72417"
                },
                "name": {
                  "type": "string",
                  "example": "Pune"
                },
                "ageGroup": {
                  "type": "string",
                  "example": "16-25"
                },
                "user": {
                  "type": "string",
                  "example": "5e80abc8dacad100170561b5"
                },
                "staff": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "5e6d4169de71e629c4d72417"
                      },
                      "name": {
                        "type": "string",
                        "example": "Akshay Sgvekar"
                      },
                      "designation": {
                        "type": "string",
                        "example": "Manager"
                      },
                      "contact": {
                        "type": "string",
                        "format": "email"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date"
                      }
                    }
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date"
                }
              }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "Standard400ErrorResponse": {
        "description": "An unexpected error occured.",
        "content": {
          "application:josn": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}